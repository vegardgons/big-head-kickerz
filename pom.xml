<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- FIXME - set group id -->
	<groupId>no.uib.ii.inf112</groupId>
	<!-- FIXME - set artifact name -->
	<artifactId>gdx-template-25v</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<!-- FIXME - set app name -->
	<name>gdx-app</name>
	<!-- FIXME change it to the project's website -->
	<url>http://www.example.com</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>17</maven.compiler.release>
		<libgdx.version>1.13.1</libgdx.version>
		<slf4j.version>2.0.16</slf4j.version>
		<!-- FIXME - set to app's main class' -->
		<main.class>inf112.bigheadkickerz.app.Main</main.class>
		<jvm.extra.args></jvm.extra.args>
	</properties>
	<dependencies>
		<dependency>
			<!--libGDX graphics library â€“ https://libgdx.com/ -->
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx</artifactId>
			<version>${libgdx.version}</version>
		</dependency>
		<dependency>
			<!-- Platform-specific libraries -->
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx-platform</artifactId>
			<version>${libgdx.version}</version>
			<classifier>natives-desktop</classifier>
		</dependency>
		<dependency>
			<!-- libgdx OpenGL backend-->
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx-backend-lwjgl3</artifactId>
			<version>${libgdx.version}</version>
		</dependency>
		<dependency>
			<!-- run libgdx without graphics (for testing)-->
			<groupId>com.badlogicgames.gdx</groupId>
			<artifactId>gdx-backend-headless</artifactId>
			<version>${libgdx.version}</version>
			<scope>test</scope>
		</dependency>
         <dependency>
            <groupId>com.badlogicgames.gdx</groupId>
            <artifactId>gdx-freetype</artifactId>
            <version>${libgdx.version}</version>
        </dependency>
        <dependency>
            <groupId>com.badlogicgames.gdx</groupId>
            <artifactId>gdx-freetype-platform</artifactId>
            <version>${libgdx.version}</version>
            <classifier>natives-desktop</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
			<!-- JUnit 5 testing framework -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- open test reporting output -->
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-reporting</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- defines assertion failed exceptions etc -->
			<groupId>org.opentest4j</groupId>
			<artifactId>opentest4j</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- for fancy assertions: https://hamcrest.org/JavaHamcrest/ -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Mocking framework for unit tests: https://site.mockito.org/ -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.15.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- SLF4J logging framework: https://slf4j.org/-->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<!-- minimal logger implementation -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- defines versions for JUnit dependencies -->
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.11.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<!-- Run app through Maven: "mvn exec:java" -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>${main.class}</mainClass>
					<arguments></arguments>
				</configuration>
			</plugin>
			<plugin>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-maven-plugin</artifactId>
			<version>4.9.3.0</version>
			<dependencies>
				<!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
				<dependency>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs</artifactId>
				<version>4.9.3</version>
				</dependency>
			</dependencies>
			</plugin>
			<!-- Build a fat uber-jar with all dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
									</manifestEntries>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
							<artifactSet></artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- checks that we have the right Maven version -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.6.3</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- gather coverage info while running tests -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- (maybe) run integration tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven defaults  -->
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.12</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.5.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>4.0.0-M16</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.13.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.5.2</version>
					<configuration>
						<!-- enable Open Test Reporting output -->
						<properties>
							<configurationParameters>
								junit.platform.reporting.open.xml.enabled = true
								junit.platform.reporting.output.dir = target/surefire-reports
							</configurationParameters>
						</properties>
						<!-- ignore Java module system while testing -->
						<useModulePath>false</useModulePath>
						<argLine></argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.5.2</version>
					<configuration>
						<!-- enable Open Test Reporting output -->
						<properties>
							<configurationParameters>
								junit.platform.reporting.open.xml.enabled = true
								junit.platform.reporting.output.dir = target/failsafe-reports
							</configurationParameters>
						</properties>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.4.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.1.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.5.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.18.0</version>
					<configuration>
						<!-- don't notify us about new alpha/beta/milestone versions -->
						<!-- you can check for updated plugins and dependencies by running: -->
						<!--   mvn versions:display-plugin-updates versions:display-property-updates versions:display-dependency-updates -->
						<ruleSet>
							<ignoreVersions>
								<ignoreVersion>
									<type>regex</type>
									<version>(.+-SNAPSHOT|.+-M\d|.+-alpha.*|.+-beta.*)</version>
								</ignoreVersion>
							</ignoreVersions>
						</ruleSet>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
